%project-summary {
	display: flex;
	flex-direction: column;
	padding-inline: var(--site-margin);

	.project-summary__container {
		display: grid;
		gap: var(--space-relative-md) var(--space-relative-lg);
		grid-auto-rows: min-content;
		grid-template-areas:
			"media"
			"header"
			"body";
		margin-left: auto;
		margin-right: auto;
		width: min(100%, var(--width-max-site));
	}

	.project-summary__header {
		grid-area: header;
		line-height: var(--line-height-sm);
		padding-block-start: var(--space-relative-md);
		position: relative;

		&::before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			height: 4px;
			width: 8ch;
			background-color: var(--color-1);
		}
	}

	.project-summary__body {
		columns: var(--measure-xs) auto;
		gap: var(--space-fluid-md);
		grid-area: body;

		> * + * {
			margin-top: 1em;
		}
	}

	.project-summary__media {
		grid-area: media;
	}

	img {
		box-shadow: 0 0 var(--space-relative-md) rgba(0, 0, 0, 0.2);
		max-height: 95vh;
	}
}

@mixin css {
	.project-summary--ionian {
		@extend %project-summary;

		// FIXME: this needs to match the width-max-site token, but you can't use
		// custom props in media queries
		@media (min-width: 80em) {
			.project-summary__container {
				grid-template-areas:
					"media header"
					"media body";
				grid-template-columns:
					minmax(auto, max-content)
					var(--measure-sm);
				grid-template-rows: min-content 1fr;
			}
		}
	}

	.project-summary--dorian {
		@extend %project-summary;

		.project-summary__media {
			justify-self: center;
		}

		.project-summary__header,
		.project-summary__body {
			box-sizing: content-box;
			margin-left: auto;
			margin-right: auto;
			max-width: var(--measure-lg);
			width: 100%;
		}
	}

	.project-summary--phrygian {
		@extend %project-summary;

		// FIXME: this needs to match the width-max-site token, but you can't use
		// custom props in media queries
		@media (min-width: 80em) {
			.project-summary__container {
				display: block;
			}

			.project-summary__header {
				float: left;
				margin-block-end: var(--space-fluid-md);
				margin-block-start: var(--space-fluid-lg);
			}

			.project-summary__media {
				float: right;
				margin-inline-start: var(--space-relative-lg);
				margin-block-end: var(--space-relative-lg);
				max-width: calc(100% - var(--measure-sm) - var(--space-relative-lg));
			}

			.project-summary__body {
				display: contents;

				> * {
					clear: left;
					max-width: var(--measure-lg);
				}
			}
		}
	}

	.project-summary--lydian {
		@extend %project-summary;

		background-color: var(--surface-2);
		color: var(--text-2);
		padding-block: var(--space-relative-xl);
		text-align: center;

		.project-summary__media,
		.project-summary__body {
			justify-self: center;
		}

		.project-summary__header {
			p {
				color: var(--text-2);
			}

			&::before {
				left: 50%;
				transform: translateX(-50%);
			}
		}

		.project-summary__body {
			width: min(100%, var(--measure-md));
		}
	}
}
